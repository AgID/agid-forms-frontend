# production or development
NODE_ENV=development

FRONTEND_VERSION=0.2.0

# project name
COMPOSE_PROJECT_NAME=agid-forms

# since we use the same project name for frontend and backend (needed to share the network)
# we chose to not stop orphans on docker-compose down (to not shut down backend)
COMPOSE_IGNORE_ORPHANS=1

# form.agid.gov.it or localhost
FRONTEND_HOST=form.agid.gov.it

# frontend http internal port (not reachable if not by the docker network)
HTTP_PORT=9999

# endpoint of hasura graphql engine
HASURA_GRAPHQL_ENDPOINT=https://database.form.agid.gov.it/v1/graphql

# see https://docs.hasura.io/1.0/graphql/manual/deployment/heroku/securing-graphql-endpoint.html
# needed to build graphql queries to remote hasura
HASURA_GRAPHQL_ADMIN_SECRET=foobar

# see https://docs.hasura.io/1.0/graphql/manual/auth/authorization/common-roles-auth-examples.html
HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anonymous

# same as HASURA_GRAPHQL_ENDPOINT, but statically embedded into frontend assets
GATSBY_HASURA_GRAPHQL_ENDPOINT=https://database.form.agid.gov.it/v1/graphql

# endpoint of agid-forms-backend authentication service
GATSBY_BACKEND_ENDPOINT=https://backend.form.agid.gov.it/api/v1

# endpoint of agid-forms-backend upload server (no final slash)
GATSBY_UPLOAD_ENDPOINT=https://uploads.form.agid.gov.it

GOOGLE_ANALYTICS_TRACKING_ID=UA-XXXXXXXXX

CORS=default-src 'self' 'unsafe-inline' data: *.example.com; frame-ancestors 'self'; object-src 'none'
